function loadData = import5MinLoadData(varargin)
%IMPORTFILE Import data from a text file
%  TMP6YP0EZST = IMPORTFILE(FILENAME) reads data from text file FILENAME
%  for the default selection.  Returns the data as a table.
%
%  TMP6YP0EZST = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  tmp6yp0ezst = importfile("C:\Users\sbaron\MATLAB Drive\Wind_Microgrid\work\data\tmp6yp0ezst.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 23-Jul-2020 13:02:03

%% Input handling
parser = inputParser();
parser.addOptional ('filename','197.csv',@ischar);
parser.addOptional('dataLines',[2, Inf]);
parser.parse(varargin{:});
p = parser.Results;

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 2);

% Specify range and delimiter
opts.DataLines = p.dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["timestamp","datetime_utc_measured", "total_demand_kw"];
opts.VariableTypes = ["double","datetime", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "datetime_utc_measured", "InputFormat", "yyyy-MM-dd HH:mm:ss");

% Import the data
loadData = readtable(p.filename, opts);

numDays = 60;
loadDatatemp = loadData(1:1:288*numDays,:);
startHr = 10;
endHr = startHr + 12;
loadDatatemp2 = [];

% Select days of the input dataset
k = [ 2 3 4 5 8 9 10 11 12 16 17 18 19 22 23 24 25 26 29 30 31 32 33 36 37 38 39 40 43 44];

newDaytemp = -1; dayCount = 0;
for m = 1:length(loadDatatemp.timestamp)

    % extract min/hours
    newHr  = hour(loadDatatemp.datetime_utc_measured(m));
    newDay = day(loadDatatemp.datetime_utc_measured(m));
    
    if (newDay ~= newDaytemp) && (m~=1)
        dayCount = dayCount + 1;
    end
    
    if (newHr >= startHr) && (newHr< endHr) && sum(dayCount == k)
        loadDatatemp2=cat(1,loadDatatemp2,loadDatatemp(m,:));
    end
    
    newDaytemp = newDay;
end

loadData = table2timetable(loadDatatemp2,'RowTimes','datetime_utc_measured');

loadData = sortrows(loadData,'datetime_utc_measured','ascend');

loadData.averaged = loadData.total_demand_kw;
loadData = loadData(isfinite(loadData.averaged),:);

loadTs = timeseries(loadData.averaged,datenum(loadData.datetime_utc_measured));

assignin('base','loadData',loadData);
assignin('base','loadTs',loadTs);